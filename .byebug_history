continue
exit
continue
user_signed_in?
user_signed_in?.
@user
continue
@user
continue
continyue
continue
@user
continue
@user
exit
user_signed_in?
@user
continue
ontinue
@user
continue
@user
@gmail.com
exit
user_signed_in?
continue
@user
continue
current_user
@user
continue
exit
continue
@user
continue
@user
exit
@user
continue
exit
@frontend_news_number_view
ost@frontend_news_number_view
continue
@frontend_news 
continue
@frontend_news
exit
@news_cookie.each
news_cookie
frontend_news_cookie
continue
@news_cookie.name
.new
@news_cookie.ids
@news_cookie.id
@news_cookie.1
@news_cookie
continue
@frontend_news_cookie
frontend_news_cookie
- byebug
exit
continue
@frontend_news_cookie
exit
@frontend_news_cookie.page(2)
@frontend_news_cookie.load
@frontend_news_cookie
exit
recent_news.page(5)
recent_news.page(3)
recent_news.ids.count
recent_news.ids
recent_news.id
recent_news.last
recent_news
@frontend_news_cookie
exit
recent_news.page(recent_news.count)
recent_news.limit(5)
recent_news.all
recent_news
kill -9 $(lsof -i tcp:3000 -t)
continue
cntinue
@frontend_news_cookie
exit
@frontend_news_number_view.page(@frontend_news_cookie_count).per(2)
exit
@news_cookie
exit
@news_cookie
exit
frontend_news_cookie.id
frontend_news_cookie
exit
aa
continue
aa
continue
cookies[:name]
exit
continue
cookies[:name]
exit
f.user
exit
f.id
@news_users.each do |f|
@news_users.each
@news_users
exit
@news_comments
exit
@news_comments
exit
@news_comments.each
@news_comments.all
@news_comments
exit
news_users.comments.all
news_users.comment
news_users.comments
news_users
exit
f.news
continue
@backend_comments.each
f.id
f
f.news
exit
f.news
exit
f.id
@backend_comments.each 
f
exit
@backend_comments
exit
exir
continue
@backend_news
exit
@backend_news_comment
Backend::Comment.first
@backend_news_comment
exit
@backend_news_comment
ews  @backend_news_comment
exit
user@backend_news_comment
exit
@news_comments
continue
news_comments
~news_comments
exit
@news_users.id
@news_users
continue
@news_users
@frontend_news_details
exit
 @frontend_news_details
 @frontend_news_details.users
puts @frontend_news_details.users
debug @frontend_news_details.users
@frontend_news_details.users
@frontend_news_details.comments.users
@frontend_news_details.comments
@frontend_news_details
@frontend_news_details.users
@news_users
exit
news_comments
continue
exit
news_users
exit
@news_users
@news_comments
exit
@frontend_news_details.users
@frontend_news_details.comment
@frontend_news_details.comments
@frontend_news_details.comment
@frontend_news_details.users
@user_comment.user
@user_comment.users
@user_comment.user
@user_comment.user.all
@user_comment.user
@user_comment
continue
@comment
exit
@comment.user_id = current_user.id
@comment.user_id
@comment
exit
@comment
exit
@comment
@comment.user_id
current_user.id
current_user
@comment
exit
@frontend_news_details
@comment
exit
@comment
exit
@comment
exit
@comment
exit
@comment
exit
exir
current_user.comments
current_user.comment
@user.create(comment_params)
@user.comment.create
@user
exit
@relation_cat_news
exit
@relation_new_cat = @relation_new_cat.news
@relation_new_cat
exit
params[:resource]
params(:resource)
resource
exit
resource
exit
resource
exit
@search.result(distinct: true)
@people
exit
@people.order(created: :desc).all
@people.order(created: :desc)
@people.order(created: desc)
@people
exit
@people
exit
Backend::News.all.search(params[:q])
Backend::News.all
Backend::News
@search.all
@search
exit
